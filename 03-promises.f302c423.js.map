{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","createPromise","position","delay","shouldResolve","Math","random","promise","Promise","reslove","reject","setTimeout","onSucsess","result","console","log","onError","error","then","catch"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAcC,EAAUC,GACzBC,MAAAA,EAAgBC,KAAKC,SAAW,GAajCC,OAZLA,QAAU,IAAIC,QAAQ,CAACC,EAASC,KAClCC,WAAW,KACLP,EACFK,yBAA+BP,QAAeC,OAE1CO,wBAA6BR,QAAeC,QAGjDA,KAIII,QAIP,SAASK,EAAUC,GACjBC,QAAQC,IAAIF,GAEd,SAASG,EAAQC,GACfH,QAAQC,IAAIE,GALdhB,IAAgBiB,KAAKN,GAAWO,MAAMH","file":"03-promises.f302c423.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  promise = new Promise((reslove, reject) => {\nsetTimeout(()=>{\n  if (shouldResolve) {\n    reslove(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n\n      }\n}, delay)\n\n\n  });\nreturn promise\n  \n}\ncreatePromise().then(onSucsess).catch(onError);\nfunction onSucsess(result) {\n  console.log(result)\n};\nfunction onError(error) {\n  console.log(error)\n}"]}