{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","delay","step","amount","console","log","value","setID","DATA","onSubmit","e","preventDefault","delayBilder","forEach","currentValue","index","createPromise","then","onSucsess","catch","onError","clearTimeout","result","error","onCoice","target","name","i","total","Number","push","position","Promise","reslove","reject","shouldResolve","Math","random","setTimeout","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,qBAC7BG,OAAQJ,SAASC,cAAc,wBAEjCI,QAAQC,IAAIR,EAAKI,OACjBG,QAAQC,IAAIR,EAAKM,OAAOG,OACxB,IAAIC,EAAQ,KACRC,EAAO,GAGX,SAASC,EAASC,GAChBA,EAAEC,iBAEFC,EAAYf,EAAKM,OAAQN,EAAKI,MAAOJ,EAAKK,MAC1CM,EAAKK,QAAQ,CAACC,EAAcC,KAG1BC,EAAcD,EAAOD,GAAcG,KAAKC,GAAWC,MAAMC,KAE3DZ,EAAO,GACTa,aAAad,GAEb,SAASW,EAAUI,GACjBlB,QAAQC,IAAIiB,GAEd,SAASF,EAAQG,GACfnB,QAAQC,IAAIkB,GAEd,SAASC,EAAQd,GACfb,EAAKa,EAAEe,OAAOC,MAAQhB,EAAEe,OAAOnB,MAC/BF,QAAQC,IAAIR,GAEd,SAASe,EAAYT,EAAQF,EAAOC,GAClCM,EAAO,GACF,IAAA,IAAImB,EAAI,EAAGA,EAAIxB,EAAQwB,GAAK,EAAG,CAG5BC,MAAAA,GAFN3B,EAAQ4B,OAAO5B,KACfC,EAAO2B,OAAO3B,IACayB,EAE3BnB,EAAKsB,KAAKF,GACVxB,QAAQC,IAAIG,IAIhB,SAASQ,EAAce,EAAU9B,GACxB,OAAA,IAAI+B,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GACxBC,WAAW,KACnBH,GACFF,yBAA+BF,EAAS,QAAQ9B,OAGlDiC,wBAA6BH,EAAS,QAAQ9B,QAC7CA,KA7CPJ,EAAKC,KAAKyC,iBAAiB,QAASf,GACpC3B,EAAKC,KAAKyC,iBAAiB,SAAU9B","file":"03-promises.50e127a4.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name = delay]'),\n  step: document.querySelector('input[name =step]'),\n  amount: document.querySelector('input[name =amount]'),\n};\nconsole.log(refs.delay);\nconsole.log(refs.amount.value)\nlet setID = null;\nlet DATA = [];\nrefs.form.addEventListener('input', onCoice);\nrefs.form.addEventListener('submit', onSubmit);\nfunction onSubmit(e) {\n  e.preventDefault();\n  // console.log(`Form Submited`);\n  delayBilder(refs.amount, refs.delay, refs.step);\n  DATA.forEach((currentValue, index) => {\n    // console.log(currentValue);\n    // console.log(index)\n    createPromise(index, currentValue).then(onSucsess).catch(onError);\n  });\n  DATA = [];\nclearTimeout(setID);\n}\nfunction onSucsess(result) {\n  console.log(result);\n}\nfunction onError(error) {\n  console.log(error);\n}\nfunction onCoice(e) {\n  refs[e.target.name] = e.target.value;\n  console.log(refs)\n}\nfunction delayBilder(amount, delay, step) {\n  DATA = []\n  for (let i = 0; i < amount; i += 1) {\n    delay = Number(delay);\n    step = Number(step);\n    const total = delay + step*i\n     \n    DATA.push(total);\n    console.log(DATA);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((reslove, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const setID = setTimeout(() => {\n      if (shouldResolve) {\n        reslove(`✅ Fulfilled promise ${position+1} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position+1} in ${delay}ms`);\n    }, delay);\n  });\n}\n"]}